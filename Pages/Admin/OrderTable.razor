<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr><th colspan="5" class="text-center">@TableTitle</th></tr>
    </thead>
    <tbody>
        @if (Orders.Count() > 0)
        {
            @foreach (Order order in Orders)
            {
                <tr>
                    <td>@order.Name</td>
                    <td>@order.Zip</td>
                    <th>Product</th>
                    <th>Quantity</th>

                    <!-- The 'onclick' attribute is used to specify a method to be -->
                    <!-- executed when the element is clicked and the executing method -->
                    <!-- is defined within the 'code' part of the razor file -->
                    <!---->
                    <!-- The 'e' in the delegate call argument is the 'MouseEventArgs' -->
                    <!-- which as the name suggests, gives info about the event that triggers when -->
                    <!-- the mouse is clicked -->
                    <td>
                        <button class="btn btn-sm btn-danger"
                                @onclick="@(e => OrderSelected.InvokeAsync(order.OrderID))">
                            @ButtonLabel
                        </button>
                    </td>
                </tr>
                @foreach (CartLine line in order.Lines)
                {
                    <tr>
                        <td colspan="2"></td>
                        <td>@line.Product.Name</td>
                        <td>@line.Quantity</td>
                        <td></td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Orders</td>
            </tr>
        }
    </tbody>
</table>

@code
{
    [Parameter]
    public string TableTitle { get; set; } = "Orders";

    [Parameter]
    public IEnumerable<Order> Orders { get; set; } = Enumerable.Empty<Order>();

    [Parameter]
    public string ButtonLabel { get; set; } = "Ship";

    // EventCallback is a delegate (or a method) that triggers when an event is fired
    [Parameter]
    public EventCallback<int> OrderSelected { get; set; }
}
